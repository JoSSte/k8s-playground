# encoding: utf-8
# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

current_dir    = File.dirname(File.expand_path(__FILE__))
vagrant_config = YAML.load_file("#{current_dir}/../common/config.yaml")

Vagrant.configure(2) do |config|

  config.vm.box = "JoSSte/lamp"
  config.vm.box_version = "2.0.2"
  config.vm.define vagrant_config['slave']['server_name']

  config.vm.network 'private_network', ip: vagrant_config['slave']['public_ip']

  #increase timeout
  config.vm.boot_timeout = 2000
  
  # configure virtualbox settings
  # https://www.vagrantup.com/docs/providers/virtualbox/configuration
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
    
  end

  #config.vbguest.auto_update = false

  # config.vm.post_up_message = ""

  # https://github.com/agiledivider/vagrant-hostsupdater
  if Vagrant.has_plugin?("vagrant-hostsupdater")  
    config.hostsupdater.aliases = [vagrant_config['slave']['server_name']]
  end

  if Vagrant.has_plugin?("vagrant-cachier")
    # Configure cached packages to be shared between instances of the same base box.
    # More info on http://fgrehm.viewdocs.io/vagrant-cachier/usage
    config.cache.scope = :box

    # OPTIONAL: If you are using VirtualBox, you might want to use that to enable
    # NFS for shared folders. This is also very useful for vagrant-libvirt if you
    # want bi-directional sync
    config.cache.synced_folder_opts = {
      type: :nfs,
      # The nolock option can be useful for an NFSv3 client that wants to avoid the
      # NLM sideband protocol. Without this option, apt-get might hang if it tries
      # to lock files needed for /var/cache/* operations. All of this can be avoided
      # by using NFSv4 everywhere. Please note that the tcp option is not the default.
      mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
    }
    # For more information please check http://docs.vagrantup.com/v2/synced-folders/basic_usage.html
  end
  
  # configure k8s basic setup
  config.vm.provision :shell, path: "../common/scripts/k8s-basic.sh", 
    :env => {
      "SERVER_NAME" => vagrant_config['slave']['server_name'],
      "IP_ADDR"     => vagrant_config['slave']['public_ip']
    }
    config.vm.provision :shell, inline: "ip addr"
end